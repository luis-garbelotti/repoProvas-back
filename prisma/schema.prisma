// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())
  email String @unique
  password String

  sessions Session[]

  @@map("users")
}

model Category {
  id Int @id @default(autoincrement())
  name String @unique 

  tests Test[]

  @@map("categories")
}

model Teacher {
  id Int @id @default(autoincrement())
  name String @unique

  teacherDisciplines TeacherDiscipline[]

  @@map("teachers")
}

model Term {
  id Int @id @default(autoincrement())
  number Int @unique

  disciplines Discipline[]
  
  @@map("terms")
}

model Discipline {
  id Int @id @default(autoincrement())
  name String @unique

  term Term @relation(fields: [termId], references: [id])
  termId Int

  teacherDisciplines TeacherDiscipline[]
  tests Test[]

  @@map("disciplines")
}

model TeacherDiscipline {
  id Int @id @default(autoincrement())

  teachers Teacher @relation(fields: [teacherId], references: [id])
  teacherId Int

  discliplines Discipline @relation(fields: [disciplineId], references: [id])
  disciplineId Int 

  tests Test[]

  @@map("teacherDisciplines")
}

model Test {
  id Int @id @default(autoincrement())
  name String
  pdfUrl String
  
  categories Category @relation(fields: [categoryId], references: [id])
  categoryId Int

  discliplines Discipline @relation(fields: [disciplineId], references: [id])
  disciplineId Int

  teachersDisciplines TeacherDiscipline @relation(fields: [teacherDisciplineId], references: [id])
  teacherDisciplineId Int

  @@map("tests")
}

model Session {
  id Int @id @default(autoincrement())
  token String 
  
  users User @relation(fields: [userId], references: [id])
  userId Int

  @@map("sessions")
}